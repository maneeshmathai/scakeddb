<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class MovesActivity extends \Entities\MovesActivity implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setSteps($steps)
    {
        $this->__load();
        return parent::setSteps($steps);
    }

    public function getSteps()
    {
        $this->__load();
        return parent::getSteps();
    }

    public function setActivity($activity)
    {
        $this->__load();
        return parent::setActivity($activity);
    }

    public function getActivity()
    {
        $this->__load();
        return parent::getActivity();
    }

    public function setDateUpdated($dateUpdated)
    {
        $this->__load();
        return parent::setDateUpdated($dateUpdated);
    }

    public function getDateUpdated()
    {
        $this->__load();
        return parent::getDateUpdated();
    }

    public function setDistance($distance)
    {
        $this->__load();
        return parent::setDistance($distance);
    }

    public function getDistance()
    {
        $this->__load();
        return parent::getDistance();
    }

    public function setUserApps(\Entities\UserApps $userApps = NULL)
    {
        $this->__load();
        return parent::setUserApps($userApps);
    }

    public function getUserApps()
    {
        $this->__load();
        return parent::getUserApps();
    }

    public function setSdate($sdate)
    {
        $this->__load();
        return parent::setSdate($sdate);
    }

    public function getSdate()
    {
        $this->__load();
        return parent::getSdate();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'steps', 'activity', 'dateUpdated', 'distance', 'sdate', 'userApps');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}